import pymorphy2

perevod = {'а': 'Ⰰ', 'б': 'Ⰱ', 'в': 'Ⰲ', 'г': 'Ⰳ', 'д': 'Ⰴ', 'е': 'Ⰵ', 'ж': 'Ⰶ',
           'з': 'Ⰸ', 'и': 'Ⰻ', 'і': 'Ⰹ',
           'к': 'Ⰽ', 'л': 'Ⰾ', 'н': 'Ⱀ', 'о': 'Ⱁ', 'п': 'Ⱂ', 'р': 'Ⱃ',
           'с': 'Ⱄ', 'т': 'Ⱅ', 'у': 'Ⱆ', 'ф': 'Ⱇ',
           'х': 'Ⱈ', 'ч': 'Ⱍ', 'ш': 'Ⱎ', 'щ': 'Ⱋ', 'ъ': 'Ⱏ', 'ы': 'ⰟⰊ',
           'ь': 'Ⱐ', 'ѣ': 'Ⱑ', 'э': 'Ⰵ', 'ю': 'Ⱓ',
           'я': 'Ⱔ', 'м': 'Ⰿ', 'й': 'Ⰻ', 'ѳ': 'Ⱚ', 'ѵ': 'Ⰻ', 'ц': 'Ⱌ'}
vowels = ['а', 'у', 'е', 'ы', 'о', 'э', 'ё', 'я', 'и', 'ю', 'й', 'ѣ']
consonant = ['ц', 'к', 'н', 'г', 'ш', 'щ', 'з', 'х', 'ф', 'в', 'п', 'р',
             'л', 'д', 'ж', 'ч', 'с', 'м', 'т', 'б', 'ѳ']
Extra_shortness = ['ъ', 'ь']
iat = "ѣ"
i_10 = "і"
fita_roots = {'Агаф': 'Агаѳ', 'Агафокл': 'Агаѳокл', 'Агафон': 'Агаѳон',
              'Антисфен': 'Антисѳен', 'Анфим': 'Анѳим',
              'Анфис': 'Анѳис', 'Ареф': 'Ареѳ', 'Афанас': 'Аѳанас', 'Афин': 'Аѳин',
              'Афиноген': 'Аѳиноген',
              'Варфоломей': 'Варѳолом', 'Голиаф': 'Голіаѳ', 'Демосфен': 'Демосѳен',
              'Дороф': 'Дороѳ', 'Досиф': 'Досиѳ',
              'Евфим': 'Евѳим', 'Евстаф': 'Евстаѳ', 'Ероф': 'Ероѳ', 'Есфир': 'Есѳир',
              'Эсфир': 'Эсѳир', 'Иакинф': 'Иакинѳ', 'Ионафан': 'Ионаѳан', 'Иофор': 'Іоѳор',
              'Клеанф': 'Клеанѳ', 'Ксанф': 'Ксанѳ',
              'Марф': 'Марѳ', 'Матф': 'Матѳ', 'Мафусаил': 'Маѳусаил', 'Мефод': 'Меѳод',
              'Логофет': 'Логоѳет', 'Нафанаил': 'Наѳанаил', 'Парфен': 'Парѳен',
              'Парфенон': 'Парѳенон',
              'Пифагор': 'Пиѳагор', 'Пиф': 'Пиѳ', 'Руф': 'Руѳ', 'Саваоф': 'Саваоѳ',
              'Тимоф': 'Тимоѳ', 'Филоф': 'Филоѳ',
              'Хрисанф': 'Хрисанѳ', 'Эратосфен': 'Эратосѳен', 'Юдиф': 'Юдиѳ',
              'Иудиф': 'Иудиѳ', 'Фадд': 'Ѳадд',
              'Фалал': 'Ѳалал', 'Фамар': 'Ѳамар', 'Фёкл': 'Ѳёкл', 'Фемид': 'Ѳемид',
              'Фемистокл': 'Ѳемистокл',
              'Феогност': 'Ѳеогност', 'Феодор': 'Ѳеодор', 'Фёдор': 'Ѳёдор',
              'Фед': 'Ѳед', 'Феодос': 'Ѳеодос',
              'Федос': 'Ѳедос', 'Феодот': 'Ѳеодот', 'Федот': 'Ѳедот',
              'Феодул': 'Ѳеодул', 'Федул': 'Ѳедул',
              'Феоктист': 'Ѳеоктист', 'Феофан': 'Ѳеофан', 'Феофилакт': 'Ѳеофилакт',
              'Филат': 'Ѳилат',
              'Феофил': 'Ѳеофил', 'Ферапонт': 'Ѳерапонт', 'Фирс': 'Ѳирс',
              'Феон': 'Ѳеон', 'Фома': 'Ѳом',
              'Фоминичн': 'Ѳоминичн', 'Фрасимах': 'Ѳрасимах', 'афин': 'аѳин',
              'афон': 'аѳон', 'брисфен': 'брисѳен',
              'вифан': 'виѳан', 'вифезд': 'виѳезд', 'вифинія': 'виѳинія',
              'вифлеем': 'виѳлеем', 'вифсаид': 'виѳсаид',
              'гефсиман': 'геѳсиман', 'голгоф': 'голгоѳ', 'закинф': 'закинѳ',
              'карфаген': 'карѳаген',
              'коринф': 'коринѳ', 'ксанф': 'ксанѳ', 'марафон': 'мараѳон',
              'парф': 'парѳ', 'парфенон': 'парѳенон',
              'перинф': 'перинѳ', 'эфиоп': 'эѳиоп', 'фавор': 'ѳавор',
              'феодос': 'ѳеодос', 'фермопил': 'ѳермопил',
              'фессал': 'ѳессал', 'фессалоник': 'ѳессалоник', 'фив': 'ѳив',
              'фрак': 'ѳрак', 'скиф': 'скиѳ',
              'анафем': 'анаѳем', 'акафист': 'акаѳист', 'апофеоз': 'апоѳеоз',
              'апофегм': 'апоѳегм',
              'арифметик': 'ариѳметик', 'дифирамб': 'диѳирамб',
              'ефимон': 'еѳимон', 'ефимоны': 'еѳимоны',
              'мефимон': 'меѳимон', 'кафолическ': 'каѳолическ',
              'кафедр': 'каѳедр', 'кафизм': 'каѳизм',
              'кифар': 'киѳар', 'левиафан': 'левиаѳан', 'логарифм': 'логариѳм',
              'миф': 'миѳ', 'монофелитств': 'моноѳелитств', 'орфо': 'орѳо',
              'пафос': 'паѳос', 'рифм': 'риѳм', 'эфир': 'эѳир',
              'фимиам': 'ѳимиам', 'фит': 'ѳит'
              }


def f_iat(slovo):
    if slovo.isalpha():
        morph = pymorphy2.MorphAnalyzer()
        sl1 = morph.parse(slovo)
        sl = sl1[0]
        if "NOUN" in sl.tag and {"NOUN", 'accs'} not in sl.tag and {"NOUN", 'nomn'} not in sl.tag:
            if slovo[-1] == "е":
                slovo = slovo[:-1] + iat
    else:
        for i in range(len(slovo)):
            if slovo[i * -1 - 1] in vowels or slovo[i * -1 - 1] in consonant:
                morph = pymorphy2.MorphAnalyzer()
                sl1 = morph.parse(slovo[:i * -1])
                sl = sl1[0]
                if "NOUN" in sl.tag and {"NOUN", 'accs'} not in sl.tag \
                        and {"NOUN", 'nomn'} not in sl.tag:
                    if slovo[i * -1 - 1] == "е":
                        slovo = slovo[:i * -1 - 1] + iat + slovo[i * -1:]
                break
    return slovo


def ru_perevod_gl(text):
    text = text.split()
    text2 = ''
    for i in text:  # перевод на дореформенную орфографию
        slovo = i
        # if 'е' in slovo:
        #   slovo = f_iat(slovo) ## ѣ (ять)
        if 'ф' in slovo:  # Ѳ (Ѳита)
            for i in fita_roots:
                if i in slovo:
                    slovo = slovo.replace(i, fita_roots[i])
        if slovo.isalpha():  # ъ (еръ)
            if slovo[-1] in consonant:
                slovo += 'ъ'
        else:
            for i in range(len(slovo)):
                if slovo[(i + 1) * -1] in vowels:
                    break
                elif slovo[(i + 1) * -1] in consonant:
                    slovo = slovo[:(i + 1) * -1 + 1] + 'ъ' + slovo[(i + 1) * -1 + 1:]
                    break
        slovo = list(slovo)
        if 'и' in slovo:  # i (и десятеричное)
            for i in range(len(slovo) - 1):
                if slovo[i] == 'и' and slovo[i + 1] in vowels:
                    slovo[i] = i_10
        text2 += ''.join(slovo) + ' '
    slovo = list(text2.lower())
    slovo2 = ''
    for i in slovo:  # перевод на глаголицу
        if i in perevod:
            slovo2 += perevod[i]
        else:
            slovo2 += i
    return slovo2


if __name__ == "__main__":
    print(ru_perevod_gl(input()))
